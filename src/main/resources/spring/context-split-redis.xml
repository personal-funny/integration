<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:int-redis="http://www.springframework.org/schema/integration/redis" xmlns:redis="http://www.springframework.org/schema/redis"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd
		http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd
		http://www.springframework.org/schema/integration/redis http://www.springframework.org/schema/integration/redis/spring-integration-redis.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- Redis config -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!-- Redis connection factory -->
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig" />

	<!-- redisTemplate -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connection-factory-ref="redisConnectionFactory" />

	<!-- Serializer type -->
	<bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

	<!-- GATEWAY BEGIN -->
	<!-- Channel config define -->
	<integration:channel id="sendChannel" />
	<integration:channel id="receiveChannel" />
	<integration:channel id="errorChannel" />
	
	<!-- Redis Queue Inbound Channel Gateway -->
	<!-- <int-redis:queue-inbound-gateway 
		queue="queue.send" 
		auto-startup="true"
		request-channel="sendChannel"
		serializer="jdkSerializer"
		reply-timeout="1000"
		request-timeout="1000"
		extract-payload="false"
		connection-factory="redisConnectionFactory"/> -->

	<integration:gateway 
	    default-request-channel="sendChannel"
	    service-interface="com.lee.integration.service.IntMsgService"
	    error-channel="errorChannel" />	

	<!-- Redis Queue Outbound Channel Gateway -->
	<int-redis:queue-outbound-gateway 
		auto-startup="true"
		extract-payload="false"
		requires-reply="false"
		serializer="jdkSerializer"
		queue="queue.receive"
		request-channel="receiveChannel"
		reply-timeout="1000"
		connection-factory="redisConnectionFactory" />

	<!-- 路由器设置 -->
	<integration:router 
		input-channel="sendChannel" 
		default-output-channel="" 
		auto-startup="true" 
		apply-sequence="true" 
		expression="true">
			<integration:mapping value="true" channel="receiveChannel" />
	</integration:router>
	<!-- GATEWAY END -->

	<!-- Queue BEGIN -->
	<integration:channel id="channelSend" />
	<integration:channel id="channelReceive" />

	<int-redis:queue-inbound-channel-adapter
	        channel="channelReceive"
	        auto-startup="true"
	        connection-factory="redisConnectionFactory"
	        queue="queueSend"
	        serializer="jdkSerializer"
	        receive-timeout="1000"
	        recovery-interval=""
	        expect-message="true"/>
	
	<int-redis:queue-outbound-channel-adapter
	        auto-startup="true"
	        channel="channelSend"
	        connection-factory="redisConnectionFactory"
	        queue="queueReceive"
	        serializer="jdkSerializer"
	        extract-payload="false" />
	<!-- Queue END -->
</beans>